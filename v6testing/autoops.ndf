# file to do automatic testing of operation semantics

# Operation Semantics Checking Test Program.

# This program complements the checking done with ids by testing
# that specific operations result in the values expected from
# specific results. The goal is to have a case in here for each major
# code segment in the C routines that implement the operations.

loaddefs "datagen 

loaddefs "fuzzyeq 

testop is op Opname Arg Answer {
 Result gets apply Opname Arg;
  if not (Result fuzzyeq Answer) then
    appendfile "testops.out (link 'operation is: ' (string Opname));
    appendfile "testops.out (link 'argument is: ' (display Arg));
    appendfile "testops.out (link 'result is: ' (display Result));
    appendfile "testops.out (link 'Answer should be: ' (display Answer));
    appendfile "testops.out (display first status);
    appendfile "testops.out ' ';
  endif;
}

Init is op filenm {
  NONLOCAL fnm;
  fnm gets open filenm "r;
  if isfault fnm then
    write fnm;
    write 'Leaving Nial.';
    bye;
  endif;
}

Run is {
 Str := '';
 while not isfault Str do
  Str gets readfile Fnm;
  write Str;
  execute Str;
 endwhile
}


recover is OP Msg {
  write link 'Recovering: ' Msg;
  appendfile "evaltest.out [link 'Recovering: ' Msg];
  % user request is temporarily removed during auto run
  IF first Readscreen 'Continue ? : ' in 'yY' THEN;
  IF true THEN
    Run;
    write 'done from Recover';
    Bye;
  ENDIF;
}


Latent is {
  setformat '%25.17g';
  setlogname "testops.log;
  set "log;
  Init "alltests;
  freespace := 34567 + 25;
  freespace := first status;
  Run;
  write link 'space lost: ' (string (freespace - first status max 0));
  write 'Done from Latent';
  Bye;
}
  
Latent
