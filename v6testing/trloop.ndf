# Specific tests of the transformer mechanisms in the interpreter

# example supplied by Nils Jacobsen

inn is tr f g op a b{
if valence a <= 2 then 
  inner[f,g] a b 
else
    inn[inner[f,g],g] (rows a) b 
 endif}

a gets 3 2 2 reshape count 12;

b gets 3 4;

inn[+,*] a b = 132 996 2628


# some tests Mike Jenkins dreamed up to make the
  transformer mechanism work hard.

NIX is tr f (0 FOLD f)

ONCE IS tr f (1 FOLD f)

LF is tr f(FORK [atomic NIX f, ONCE f, EACH LF f])

LF tally 1 (2 3) = 1 (1 1)

lftally is FORK [atomic, tally, EACH lftally]

lftally 1 (2 3) = 1 (1 1)

FORK1 is tr f g h op a(if f a then g a else h a endif)

LF1 is tr f(FORK1 [atomic NIX f, ONCE f, EACH LF1 f])

LF1 tally 1 (2 3) = 1 (1 1)

lftally1 is FORK1 [atomic, tally, EACH lftally1]

lftally1 1 (2 3) = 1 (1 1)

eachn is tr f op n a(if n = 0 then f a else n - 1 eachn each f a endif)

eachn tally 1 (1 (2 3)) = 1 2

twig1 is tr f op a(if simple a then f a else each twig1 f a endif)

twig1 tally 1 (2 3) = 1 2

dbl is tr f op a{ f1 is f f;
    if atomic A then f A else each dbl f1 a endif}

dbl 1+ 3 (4 5) = 5 (8 9)

# The following example used to make the implementation go into
  a loop. It was fixed by handling the closure of a curried
  expression differently.

curry1  is tr f op a { f1  is (f 5) f;
     if atomic a then f a else each curry1 f1 a endif}

curry1 1+ 3 (4 5) = (7 4) ((7 ( (8 7) 5))(7((8 7) 6)))

curry2 is tr f op a{
   if atomic a then f a else each curry2 ((f 5) f) a endif}

curry2 1+ 3 (4 5) = (7 4) ((7 ( (8 7) 5))(7((8 7) 6)))

